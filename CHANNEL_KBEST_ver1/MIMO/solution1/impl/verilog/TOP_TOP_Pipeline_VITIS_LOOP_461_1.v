// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_TOP_Pipeline_VITIS_LOOP_461_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        xxr_address0,
        xxr_ce0,
        xxr_we0,
        xxr_d0,
        xxi_address0,
        xxi_ce0,
        xxi_we0,
        xxi_d0
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] xxr_address0;
output   xxr_ce0;
output   xxr_we0;
output  [15:0] xxr_d0;
output  [1:0] xxi_address0;
output   xxi_ce0;
output   xxi_we0;
output  [15:0] xxi_d0;

reg ap_idle;
reg xxr_ce0;
reg xxr_we0;
reg xxi_ce0;
reg xxi_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln461_fu_118_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [63:0] i_cast_fu_130_p1;
reg   [2:0] i_fu_80;
wire   [2:0] add_ln461_fu_124_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_2;
wire   [1:0] trunc_ln462_fu_136_p1;
wire   [63:0] LD_fu_140_p6;
wire   [63:0] ireg_fu_154_p1;
wire   [10:0] exp_tmp_fu_170_p4;
wire   [51:0] trunc_ln574_fu_184_p1;
wire   [52:0] p_Result_4_fu_188_p3;
wire   [53:0] zext_ln578_fu_196_p1;
wire   [0:0] p_Result_s_fu_162_p3;
wire   [53:0] man_V_7_fu_200_p2;
wire   [62:0] trunc_ln564_fu_158_p1;
wire   [11:0] zext_ln501_fu_180_p1;
wire   [11:0] F2_fu_220_p2;
wire   [0:0] icmp_ln590_fu_226_p2;
wire   [11:0] add_ln590_fu_232_p2;
wire   [11:0] sub_ln590_fu_238_p2;
wire  signed [11:0] sh_amt_fu_244_p3;
wire   [53:0] man_V_8_fu_206_p3;
wire   [7:0] tmp_fu_272_p4;
wire  signed [31:0] sext_ln590_fu_252_p1;
wire   [53:0] zext_ln595_fu_288_p1;
wire   [53:0] ashr_ln595_fu_292_p2;
wire   [0:0] tmp_4_fu_302_p3;
wire   [15:0] trunc_ln592_fu_262_p1;
wire   [15:0] sext_ln590cast_fu_318_p1;
wire   [0:0] icmp_ln580_fu_214_p2;
wire   [0:0] icmp_ln591_fu_256_p2;
wire   [0:0] xor_ln580_fu_328_p2;
wire   [0:0] or_ln591_fu_340_p2;
wire   [0:0] xor_ln591_fu_346_p2;
wire   [0:0] and_ln590_fu_352_p2;
wire   [0:0] icmp_ln594_fu_266_p2;
wire   [0:0] or_ln590_fu_364_p2;
wire   [0:0] icmp_ln612_fu_282_p2;
wire   [0:0] xor_ln590_fu_370_p2;
wire   [15:0] shl_ln613_fu_322_p2;
wire   [0:0] and_ln612_fu_376_p2;
wire   [0:0] and_ln594_fu_358_p2;
wire   [15:0] trunc_ln595_fu_298_p1;
wire   [15:0] select_ln597_fu_310_p3;
wire   [0:0] and_ln591_fu_334_p2;
wire   [0:0] or_ln580_fu_390_p2;
wire   [15:0] select_ln580_fu_382_p3;
wire   [15:0] select_ln580_1_fu_396_p3;
wire   [0:0] or_ln580_1_fu_420_p2;
wire   [15:0] select_ln580_3_fu_412_p3;
wire   [15:0] select_ln580_2_fu_404_p3;
wire   [63:0] LD_1_fu_435_p6;
wire   [63:0] ireg_1_fu_449_p1;
wire   [10:0] exp_tmp_1_fu_465_p4;
wire   [51:0] trunc_ln574_1_fu_479_p1;
wire   [52:0] p_Result_6_fu_483_p3;
wire   [53:0] zext_ln578_1_fu_491_p1;
wire   [0:0] p_Result_5_fu_457_p3;
wire   [53:0] man_V_10_fu_495_p2;
wire   [62:0] trunc_ln564_1_fu_453_p1;
wire   [11:0] zext_ln501_1_fu_475_p1;
wire   [11:0] F2_1_fu_515_p2;
wire   [0:0] icmp_ln590_1_fu_521_p2;
wire   [11:0] add_ln590_1_fu_527_p2;
wire   [11:0] sub_ln590_1_fu_533_p2;
wire  signed [11:0] sh_amt_1_fu_539_p3;
wire   [53:0] man_V_11_fu_501_p3;
wire   [7:0] tmp_6_fu_567_p4;
wire  signed [31:0] sext_ln590_1_fu_547_p1;
wire   [53:0] zext_ln595_1_fu_583_p1;
wire   [53:0] ashr_ln595_1_fu_587_p2;
wire   [0:0] tmp_7_fu_597_p3;
wire   [15:0] trunc_ln592_1_fu_557_p1;
wire   [15:0] sext_ln590_1cast_fu_613_p1;
wire   [0:0] icmp_ln580_1_fu_509_p2;
wire   [0:0] icmp_ln591_1_fu_551_p2;
wire   [0:0] xor_ln580_1_fu_623_p2;
wire   [0:0] or_ln591_1_fu_635_p2;
wire   [0:0] xor_ln591_1_fu_641_p2;
wire   [0:0] and_ln590_1_fu_647_p2;
wire   [0:0] icmp_ln594_1_fu_561_p2;
wire   [0:0] or_ln590_1_fu_659_p2;
wire   [0:0] icmp_ln612_1_fu_577_p2;
wire   [0:0] xor_ln590_1_fu_665_p2;
wire   [15:0] shl_ln613_1_fu_617_p2;
wire   [0:0] and_ln612_1_fu_671_p2;
wire   [0:0] and_ln594_1_fu_653_p2;
wire   [15:0] trunc_ln595_2_fu_593_p1;
wire   [15:0] select_ln597_1_fu_605_p3;
wire   [0:0] and_ln591_1_fu_629_p2;
wire   [0:0] or_ln580_2_fu_685_p2;
wire   [15:0] select_ln580_5_fu_677_p3;
wire   [15:0] select_ln580_6_fu_691_p3;
wire   [0:0] or_ln580_3_fu_715_p2;
wire   [15:0] select_ln580_8_fu_707_p3;
wire   [15:0] select_ln580_7_fu_699_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

TOP_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U1(
    .din0(64'd13827950816623819275),
    .din1(64'd13827950816623819275),
    .din2(64'd13827950816623819275),
    .din3(64'd4604543588641555194),
    .din4(trunc_ln462_fu_136_p1),
    .dout(LD_fu_140_p6)
);

TOP_mux_42_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 64 ),
    .din3_WIDTH( 64 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_42_64_1_1_U2(
    .din0(64'd4604543588641555194),
    .din1(64'd13827950816623819275),
    .din2(64'd13827950816623819275),
    .din3(64'd13827950816623819275),
    .din4(trunc_ln462_fu_136_p1),
    .dout(LD_1_fu_435_p6)
);

TOP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln461_fu_118_p2 == 1'd0)) begin
            i_fu_80 <= add_ln461_fu_124_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_80 <= 3'd0;
        end
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln461_fu_118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_2 = 3'd0;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_80;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        xxi_ce0 = 1'b1;
    end else begin
        xxi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln461_fu_118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        xxi_we0 = 1'b1;
    end else begin
        xxi_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        xxr_ce0 = 1'b1;
    end else begin
        xxr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln461_fu_118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        xxr_we0 = 1'b1;
    end else begin
        xxr_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_515_p2 = (12'd1075 - zext_ln501_1_fu_475_p1);

assign F2_fu_220_p2 = (12'd1075 - zext_ln501_fu_180_p1);

assign add_ln461_fu_124_p2 = (ap_sig_allocacmp_i_2 + 3'd1);

assign add_ln590_1_fu_527_p2 = ($signed(F2_1_fu_515_p2) + $signed(12'd4088));

assign add_ln590_fu_232_p2 = ($signed(F2_fu_220_p2) + $signed(12'd4088));

assign and_ln590_1_fu_647_p2 = (xor_ln591_1_fu_641_p2 & icmp_ln590_1_fu_521_p2);

assign and_ln590_fu_352_p2 = (xor_ln591_fu_346_p2 & icmp_ln590_fu_226_p2);

assign and_ln591_1_fu_629_p2 = (xor_ln580_1_fu_623_p2 & icmp_ln591_1_fu_551_p2);

assign and_ln591_fu_334_p2 = (xor_ln580_fu_328_p2 & icmp_ln591_fu_256_p2);

assign and_ln594_1_fu_653_p2 = (icmp_ln594_1_fu_561_p2 & and_ln590_1_fu_647_p2);

assign and_ln594_fu_358_p2 = (icmp_ln594_fu_266_p2 & and_ln590_fu_352_p2);

assign and_ln612_1_fu_671_p2 = (xor_ln590_1_fu_665_p2 & icmp_ln612_1_fu_577_p2);

assign and_ln612_fu_376_p2 = (xor_ln590_fu_370_p2 & icmp_ln612_fu_282_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln595_1_fu_587_p2 = $signed(man_V_11_fu_501_p3) >>> zext_ln595_1_fu_583_p1;

assign ashr_ln595_fu_292_p2 = $signed(man_V_8_fu_206_p3) >>> zext_ln595_fu_288_p1;

assign exp_tmp_1_fu_465_p4 = {{ireg_1_fu_449_p1[62:52]}};

assign exp_tmp_fu_170_p4 = {{ireg_fu_154_p1[62:52]}};

assign i_cast_fu_130_p1 = ap_sig_allocacmp_i_2;

assign icmp_ln461_fu_118_p2 = ((ap_sig_allocacmp_i_2 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln580_1_fu_509_p2 = ((trunc_ln564_1_fu_453_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_214_p2 = ((trunc_ln564_fu_158_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_1_fu_521_p2 = (($signed(F2_1_fu_515_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_226_p2 = (($signed(F2_fu_220_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln591_1_fu_551_p2 = ((F2_1_fu_515_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_256_p2 = ((F2_fu_220_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln594_1_fu_561_p2 = ((sh_amt_1_fu_539_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_266_p2 = ((sh_amt_fu_244_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln612_1_fu_577_p2 = ((tmp_6_fu_567_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln612_fu_282_p2 = ((tmp_fu_272_p4 == 8'd0) ? 1'b1 : 1'b0);

assign ireg_1_fu_449_p1 = LD_1_fu_435_p6;

assign ireg_fu_154_p1 = LD_fu_140_p6;

assign man_V_10_fu_495_p2 = (54'd0 - zext_ln578_1_fu_491_p1);

assign man_V_11_fu_501_p3 = ((p_Result_5_fu_457_p3[0:0] == 1'b1) ? man_V_10_fu_495_p2 : zext_ln578_1_fu_491_p1);

assign man_V_7_fu_200_p2 = (54'd0 - zext_ln578_fu_196_p1);

assign man_V_8_fu_206_p3 = ((p_Result_s_fu_162_p3[0:0] == 1'b1) ? man_V_7_fu_200_p2 : zext_ln578_fu_196_p1);

assign or_ln580_1_fu_420_p2 = (or_ln580_fu_390_p2 | and_ln590_fu_352_p2);

assign or_ln580_2_fu_685_p2 = (icmp_ln580_1_fu_509_p2 | and_ln612_1_fu_671_p2);

assign or_ln580_3_fu_715_p2 = (or_ln580_2_fu_685_p2 | and_ln590_1_fu_647_p2);

assign or_ln580_fu_390_p2 = (icmp_ln580_fu_214_p2 | and_ln612_fu_376_p2);

assign or_ln590_1_fu_659_p2 = (or_ln591_1_fu_635_p2 | icmp_ln590_1_fu_521_p2);

assign or_ln590_fu_364_p2 = (or_ln591_fu_340_p2 | icmp_ln590_fu_226_p2);

assign or_ln591_1_fu_635_p2 = (icmp_ln591_1_fu_551_p2 | icmp_ln580_1_fu_509_p2);

assign or_ln591_fu_340_p2 = (icmp_ln591_fu_256_p2 | icmp_ln580_fu_214_p2);

assign p_Result_4_fu_188_p3 = {{1'd1}, {trunc_ln574_fu_184_p1}};

assign p_Result_5_fu_457_p3 = ireg_1_fu_449_p1[32'd63];

assign p_Result_6_fu_483_p3 = {{1'd1}, {trunc_ln574_1_fu_479_p1}};

assign p_Result_s_fu_162_p3 = ireg_fu_154_p1[32'd63];

assign select_ln580_1_fu_396_p3 = ((and_ln594_fu_358_p2[0:0] == 1'b1) ? trunc_ln595_fu_298_p1 : select_ln597_fu_310_p3);

assign select_ln580_2_fu_404_p3 = ((and_ln591_fu_334_p2[0:0] == 1'b1) ? trunc_ln592_fu_262_p1 : 16'd0);

assign select_ln580_3_fu_412_p3 = ((or_ln580_fu_390_p2[0:0] == 1'b1) ? select_ln580_fu_382_p3 : select_ln580_1_fu_396_p3);

assign select_ln580_5_fu_677_p3 = ((icmp_ln580_1_fu_509_p2[0:0] == 1'b1) ? 16'd0 : shl_ln613_1_fu_617_p2);

assign select_ln580_6_fu_691_p3 = ((and_ln594_1_fu_653_p2[0:0] == 1'b1) ? trunc_ln595_2_fu_593_p1 : select_ln597_1_fu_605_p3);

assign select_ln580_7_fu_699_p3 = ((and_ln591_1_fu_629_p2[0:0] == 1'b1) ? trunc_ln592_1_fu_557_p1 : 16'd0);

assign select_ln580_8_fu_707_p3 = ((or_ln580_2_fu_685_p2[0:0] == 1'b1) ? select_ln580_5_fu_677_p3 : select_ln580_6_fu_691_p3);

assign select_ln580_fu_382_p3 = ((icmp_ln580_fu_214_p2[0:0] == 1'b1) ? 16'd0 : shl_ln613_fu_322_p2);

assign select_ln597_1_fu_605_p3 = ((tmp_7_fu_597_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln597_fu_310_p3 = ((tmp_4_fu_302_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign sext_ln590_1_fu_547_p1 = sh_amt_1_fu_539_p3;

assign sext_ln590_1cast_fu_613_p1 = sext_ln590_1_fu_547_p1[15:0];

assign sext_ln590_fu_252_p1 = sh_amt_fu_244_p3;

assign sext_ln590cast_fu_318_p1 = sext_ln590_fu_252_p1[15:0];

assign sh_amt_1_fu_539_p3 = ((icmp_ln590_1_fu_521_p2[0:0] == 1'b1) ? add_ln590_1_fu_527_p2 : sub_ln590_1_fu_533_p2);

assign sh_amt_fu_244_p3 = ((icmp_ln590_fu_226_p2[0:0] == 1'b1) ? add_ln590_fu_232_p2 : sub_ln590_fu_238_p2);

assign shl_ln613_1_fu_617_p2 = trunc_ln592_1_fu_557_p1 << sext_ln590_1cast_fu_613_p1;

assign shl_ln613_fu_322_p2 = trunc_ln592_fu_262_p1 << sext_ln590cast_fu_318_p1;

assign sub_ln590_1_fu_533_p2 = (12'd8 - F2_1_fu_515_p2);

assign sub_ln590_fu_238_p2 = (12'd8 - F2_fu_220_p2);

assign tmp_4_fu_302_p3 = ireg_fu_154_p1[32'd63];

assign tmp_6_fu_567_p4 = {{sh_amt_1_fu_539_p3[11:4]}};

assign tmp_7_fu_597_p3 = ireg_1_fu_449_p1[32'd63];

assign tmp_fu_272_p4 = {{sh_amt_fu_244_p3[11:4]}};

assign trunc_ln462_fu_136_p1 = ap_sig_allocacmp_i_2[1:0];

assign trunc_ln564_1_fu_453_p1 = ireg_1_fu_449_p1[62:0];

assign trunc_ln564_fu_158_p1 = ireg_fu_154_p1[62:0];

assign trunc_ln574_1_fu_479_p1 = ireg_1_fu_449_p1[51:0];

assign trunc_ln574_fu_184_p1 = ireg_fu_154_p1[51:0];

assign trunc_ln592_1_fu_557_p1 = man_V_11_fu_501_p3[15:0];

assign trunc_ln592_fu_262_p1 = man_V_8_fu_206_p3[15:0];

assign trunc_ln595_2_fu_593_p1 = ashr_ln595_1_fu_587_p2[15:0];

assign trunc_ln595_fu_298_p1 = ashr_ln595_fu_292_p2[15:0];

assign xor_ln580_1_fu_623_p2 = (icmp_ln580_1_fu_509_p2 ^ 1'd1);

assign xor_ln580_fu_328_p2 = (icmp_ln580_fu_214_p2 ^ 1'd1);

assign xor_ln590_1_fu_665_p2 = (or_ln590_1_fu_659_p2 ^ 1'd1);

assign xor_ln590_fu_370_p2 = (or_ln590_fu_364_p2 ^ 1'd1);

assign xor_ln591_1_fu_641_p2 = (or_ln591_1_fu_635_p2 ^ 1'd1);

assign xor_ln591_fu_346_p2 = (or_ln591_fu_340_p2 ^ 1'd1);

assign xxi_address0 = i_cast_fu_130_p1;

assign xxi_d0 = ((or_ln580_3_fu_715_p2[0:0] == 1'b1) ? select_ln580_8_fu_707_p3 : select_ln580_7_fu_699_p3);

assign xxr_address0 = i_cast_fu_130_p1;

assign xxr_d0 = ((or_ln580_1_fu_420_p2[0:0] == 1'b1) ? select_ln580_3_fu_412_p3 : select_ln580_2_fu_404_p3);

assign zext_ln501_1_fu_475_p1 = exp_tmp_1_fu_465_p4;

assign zext_ln501_fu_180_p1 = exp_tmp_fu_170_p4;

assign zext_ln578_1_fu_491_p1 = p_Result_6_fu_483_p3;

assign zext_ln578_fu_196_p1 = p_Result_4_fu_188_p3;

assign zext_ln595_1_fu_583_p1 = $unsigned(sext_ln590_1_fu_547_p1);

assign zext_ln595_fu_288_p1 = $unsigned(sext_ln590_fu_252_p1);

endmodule //TOP_TOP_Pipeline_VITIS_LOOP_461_1
