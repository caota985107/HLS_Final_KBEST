-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity TOP_TOP_Pipeline_VITIS_LOOP_492_5_VITIS_LOOP_493_6 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    H_rvd_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    H_rvd_ce0 : OUT STD_LOGIC;
    H_rvd_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    HH_V_29_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_29_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_28_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_28_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_27_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_27_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_26_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_26_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_25_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_25_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_24_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_24_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_23_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_23_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_22_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_22_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_21_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_21_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_20_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_20_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_19_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_19_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_18_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_18_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_17_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_17_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_16_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_16_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_15_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_15_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_14_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_14_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_13_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_13_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_12_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_12_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_11_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_11_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_10_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_10_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_9_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_9_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_8_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_8_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_7_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_7_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_6_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_6_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_5_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_5_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_4_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_4_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_3_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_3_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_2_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_2_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_1_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_1_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_141_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_141_out_ap_vld : OUT STD_LOGIC;
    HH_V_30_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_30_1_out_ap_vld : OUT STD_LOGIC;
    HH_V_31_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    HH_V_31_1_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of TOP_TOP_Pipeline_VITIS_LOOP_492_5_VITIS_LOOP_493_6 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv54_0 : STD_LOGIC_VECTOR (53 downto 0) := "000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv12_433 : STD_LOGIC_VECTOR (11 downto 0) := "010000110011";
    constant ap_const_lv12_8 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_const_lv12_FF8 : STD_LOGIC_VECTOR (11 downto 0) := "111111111000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv12_36 : STD_LOGIC_VECTOR (11 downto 0) := "000000110110";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln492_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal icmp_ln492_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln492_fu_622_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln492_reg_1357 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln494_fu_626_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln494_reg_1361 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_HH_V_phi_fu_542_p12 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln592_fu_847_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_HH_V_reg_539 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln580_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln591_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln597_fu_819_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln590_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln594_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_1_fu_842_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln613_fu_798_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln612_fu_788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln494_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal j_fu_162 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln493_fu_645_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (2 downto 0);
    signal i_fu_166 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln492_1_fu_614_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten7_fu_170 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln492_1_fu_582_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_sig_allocacmp_indvar_flatten7_load : STD_LOGIC_VECTOR (5 downto 0);
    signal HH_V_1_fu_174 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_2_fu_178 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_3_fu_182 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_4_fu_186 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_5_fu_190 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_6_fu_194 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_7_fu_198 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_8_fu_202 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_9_fu_206 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_10_fu_210 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_11_fu_214 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_12_fu_218 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_13_fu_222 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_14_fu_226 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_15_fu_230 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_16_fu_234 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_17_fu_238 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_18_fu_242 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_19_fu_246 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_20_fu_250 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_21_fu_254 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_22_fu_258 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_23_fu_262 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_24_fu_266 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_25_fu_270 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_26_fu_274 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_27_fu_278 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_28_fu_282 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_29_fu_286 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_30_fu_290 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_31_fu_294 : STD_LOGIC_VECTOR (15 downto 0);
    signal HH_V_32_fu_298 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal icmp_ln493_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln492_fu_594_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln492_fu_606_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_630_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ireg_fu_666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal exp_tmp_fu_682_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln574_fu_696_p1 : STD_LOGIC_VECTOR (51 downto 0);
    signal p_Result_1_fu_700_p3 : STD_LOGIC_VECTOR (52 downto 0);
    signal zext_ln578_fu_708_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal p_Result_s_fu_674_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal man_V_1_fu_712_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln564_fu_670_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal zext_ln501_fu_692_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal F2_fu_732_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln590_fu_744_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln590_fu_750_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sh_amt_fu_756_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal man_V_2_fu_718_p3 : STD_LOGIC_VECTOR (53 downto 0);
    signal tmp_fu_778_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln590_fu_764_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln611_fu_774_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln590cast_fu_794_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_811_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln595_fu_828_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln595_fu_832_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal ashr_ln595_fu_836_p2 : STD_LOGIC_VECTOR (53 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component TOP_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component TOP_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    i_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln492_fu_576_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_166 <= select_ln492_1_fu_614_p3;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_166 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten7_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln492_fu_576_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    indvar_flatten7_fu_170 <= add_ln492_1_fu_582_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten7_fu_170 <= ap_const_lv6_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln492_fu_576_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    j_fu_162 <= add_ln493_fu_645_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_162 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_3) and (trunc_ln492_reg_1357 = ap_const_lv3_1))) then
                HH_V_10_fu_210 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_0) and (trunc_ln492_reg_1357 = ap_const_lv3_2))) then
                HH_V_11_fu_214 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_1) and (trunc_ln492_reg_1357 = ap_const_lv3_2))) then
                HH_V_12_fu_218 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_2) and (trunc_ln492_reg_1357 = ap_const_lv3_2))) then
                HH_V_13_fu_222 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_3) and (trunc_ln492_reg_1357 = ap_const_lv3_2))) then
                HH_V_14_fu_226 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_0) and (trunc_ln492_reg_1357 = ap_const_lv3_3))) then
                HH_V_15_fu_230 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_1) and (trunc_ln492_reg_1357 = ap_const_lv3_3))) then
                HH_V_16_fu_234 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_2) and (trunc_ln492_reg_1357 = ap_const_lv3_3))) then
                HH_V_17_fu_238 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_3) and (trunc_ln492_reg_1357 = ap_const_lv3_3))) then
                HH_V_18_fu_242 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_0) and (trunc_ln492_reg_1357 = ap_const_lv3_4))) then
                HH_V_19_fu_246 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_3) and (trunc_ln492_reg_1357 = ap_const_lv3_7))) then
                HH_V_1_fu_174 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_1) and (trunc_ln492_reg_1357 = ap_const_lv3_4))) then
                HH_V_20_fu_250 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_2) and (trunc_ln492_reg_1357 = ap_const_lv3_4))) then
                HH_V_21_fu_254 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_3) and (trunc_ln492_reg_1357 = ap_const_lv3_4))) then
                HH_V_22_fu_258 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_0) and (trunc_ln492_reg_1357 = ap_const_lv3_5))) then
                HH_V_23_fu_262 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_1) and (trunc_ln492_reg_1357 = ap_const_lv3_5))) then
                HH_V_24_fu_266 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_2) and (trunc_ln492_reg_1357 = ap_const_lv3_5))) then
                HH_V_25_fu_270 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_3) and (trunc_ln492_reg_1357 = ap_const_lv3_5))) then
                HH_V_26_fu_274 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_0) and (trunc_ln492_reg_1357 = ap_const_lv3_6))) then
                HH_V_27_fu_278 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_1) and (trunc_ln492_reg_1357 = ap_const_lv3_6))) then
                HH_V_28_fu_282 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_2) and (trunc_ln492_reg_1357 = ap_const_lv3_6))) then
                HH_V_29_fu_286 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_2) and (trunc_ln492_reg_1357 = ap_const_lv3_7))) then
                HH_V_2_fu_178 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_3) and (trunc_ln492_reg_1357 = ap_const_lv3_6))) then
                HH_V_30_fu_290 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_0) and (trunc_ln492_reg_1357 = ap_const_lv3_7))) then
                HH_V_31_fu_294 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_1) and (trunc_ln492_reg_1357 = ap_const_lv3_7))) then
                HH_V_32_fu_298 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_0) and (trunc_ln492_reg_1357 = ap_const_lv3_0))) then
                HH_V_3_fu_182 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_1) and (trunc_ln492_reg_1357 = ap_const_lv3_0))) then
                HH_V_4_fu_186 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_2) and (trunc_ln492_reg_1357 = ap_const_lv3_0))) then
                HH_V_5_fu_190 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_3) and (trunc_ln492_reg_1357 = ap_const_lv3_0))) then
                HH_V_6_fu_194 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_0) and (trunc_ln492_reg_1357 = ap_const_lv3_1))) then
                HH_V_7_fu_198 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_1) and (trunc_ln492_reg_1357 = ap_const_lv3_1))) then
                HH_V_8_fu_202 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (trunc_ln494_reg_1361 = ap_const_lv2_2) and (trunc_ln492_reg_1357 = ap_const_lv3_1))) then
                HH_V_9_fu_206 <= ap_phi_mux_HH_V_phi_fu_542_p12;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln492_reg_1353 <= icmp_ln492_fu_576_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln492_fu_576_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln492_reg_1357 <= trunc_ln492_fu_622_p1;
                trunc_ln494_reg_1361 <= trunc_ln494_fu_626_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    F2_fu_732_p2 <= std_logic_vector(unsigned(ap_const_lv12_433) - unsigned(zext_ln501_fu_692_p1));
    HH_V_10_1_out <= HH_V_13_fu_222;

    HH_V_10_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_10_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_10_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_11_1_out <= HH_V_14_fu_226;

    HH_V_11_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_11_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_11_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_12_1_out <= HH_V_15_fu_230;

    HH_V_12_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_12_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_12_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_13_1_out <= HH_V_16_fu_234;

    HH_V_13_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_13_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_13_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_141_out <= HH_V_3_fu_182;

    HH_V_141_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_141_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_141_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_14_1_out <= HH_V_17_fu_238;

    HH_V_14_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_14_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_14_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_15_1_out <= HH_V_18_fu_242;

    HH_V_15_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_15_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_15_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_16_1_out <= HH_V_19_fu_246;

    HH_V_16_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_16_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_16_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_17_1_out <= HH_V_20_fu_250;

    HH_V_17_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_17_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_17_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_18_1_out <= HH_V_21_fu_254;

    HH_V_18_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_18_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_18_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_19_1_out <= HH_V_22_fu_258;

    HH_V_19_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_19_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_19_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_1_1_out <= HH_V_4_fu_186;

    HH_V_1_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_1_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_1_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_20_1_out <= HH_V_23_fu_262;

    HH_V_20_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_20_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_20_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_21_1_out <= HH_V_24_fu_266;

    HH_V_21_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_21_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_21_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_22_1_out <= HH_V_25_fu_270;

    HH_V_22_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_22_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_22_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_23_1_out <= HH_V_26_fu_274;

    HH_V_23_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_23_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_23_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_24_1_out <= HH_V_27_fu_278;

    HH_V_24_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_24_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_24_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_25_1_out <= HH_V_28_fu_282;

    HH_V_25_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_25_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_25_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_26_1_out <= HH_V_29_fu_286;

    HH_V_26_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_26_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_26_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_27_1_out <= HH_V_30_fu_290;

    HH_V_27_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_27_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_27_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_28_1_out <= HH_V_31_fu_294;

    HH_V_28_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_28_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_28_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_29_1_out <= HH_V_32_fu_298;

    HH_V_29_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_29_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_29_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_2_1_out <= HH_V_5_fu_190;

    HH_V_2_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_2_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_2_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_30_1_out <= HH_V_2_fu_178;

    HH_V_30_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_30_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_30_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_31_1_out <= HH_V_1_fu_174;

    HH_V_31_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_31_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_31_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_3_1_out <= HH_V_6_fu_194;

    HH_V_3_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_3_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_3_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_4_1_out <= HH_V_7_fu_198;

    HH_V_4_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_4_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_4_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_5_1_out <= HH_V_8_fu_202;

    HH_V_5_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_5_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_5_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_6_1_out <= HH_V_9_fu_206;

    HH_V_6_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_6_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_6_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_7_1_out <= HH_V_10_fu_210;

    HH_V_7_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_7_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_7_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_8_1_out <= HH_V_11_fu_214;

    HH_V_8_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_8_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_8_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    HH_V_9_1_out <= HH_V_12_fu_218;

    HH_V_9_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln492_fu_576_p2, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            HH_V_9_1_out_ap_vld <= ap_const_logic_1;
        else 
            HH_V_9_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    H_rvd_address0 <= zext_ln494_fu_640_p1(6 - 1 downto 0);

    H_rvd_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            H_rvd_ce0 <= ap_const_logic_1;
        else 
            H_rvd_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln492_1_fu_582_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten7_load) + unsigned(ap_const_lv6_1));
    add_ln492_fu_594_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv4_1));
    add_ln493_fu_645_p2 <= std_logic_vector(unsigned(select_ln492_fu_606_p3) + unsigned(ap_const_lv3_1));
    add_ln590_fu_744_p2 <= std_logic_vector(unsigned(F2_fu_732_p2) + unsigned(ap_const_lv12_FF8));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln492_fu_576_p2)
    begin
        if (((icmp_ln492_fu_576_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_HH_V_phi_fu_542_p12_assign_proc : process(icmp_ln492_reg_1353, trunc_ln592_fu_847_p1, ap_phi_reg_pp0_iter1_HH_V_reg_539, icmp_ln580_fu_726_p2, icmp_ln591_fu_768_p2, select_ln597_fu_819_p3, icmp_ln590_fu_738_p2, icmp_ln594_fu_805_p2, trunc_ln595_1_fu_842_p1, shl_ln613_fu_798_p2, icmp_ln612_fu_788_p2)
    begin
        if ((((icmp_ln580_fu_726_p2 = ap_const_lv1_1) and (icmp_ln492_reg_1353 = ap_const_lv1_0)) or ((icmp_ln612_fu_788_p2 = ap_const_lv1_0) and (icmp_ln590_fu_738_p2 = ap_const_lv1_0) and (icmp_ln591_fu_768_p2 = ap_const_lv1_0) and (icmp_ln580_fu_726_p2 = ap_const_lv1_0) and (icmp_ln492_reg_1353 = ap_const_lv1_0)))) then 
            ap_phi_mux_HH_V_phi_fu_542_p12 <= ap_const_lv16_0;
        elsif (((icmp_ln612_fu_788_p2 = ap_const_lv1_1) and (icmp_ln590_fu_738_p2 = ap_const_lv1_0) and (icmp_ln591_fu_768_p2 = ap_const_lv1_0) and (icmp_ln580_fu_726_p2 = ap_const_lv1_0) and (icmp_ln492_reg_1353 = ap_const_lv1_0))) then 
            ap_phi_mux_HH_V_phi_fu_542_p12 <= shl_ln613_fu_798_p2;
        elsif (((icmp_ln594_fu_805_p2 = ap_const_lv1_1) and (icmp_ln590_fu_738_p2 = ap_const_lv1_1) and (icmp_ln591_fu_768_p2 = ap_const_lv1_0) and (icmp_ln580_fu_726_p2 = ap_const_lv1_0) and (icmp_ln492_reg_1353 = ap_const_lv1_0))) then 
            ap_phi_mux_HH_V_phi_fu_542_p12 <= trunc_ln595_1_fu_842_p1;
        elsif (((icmp_ln594_fu_805_p2 = ap_const_lv1_0) and (icmp_ln590_fu_738_p2 = ap_const_lv1_1) and (icmp_ln591_fu_768_p2 = ap_const_lv1_0) and (icmp_ln580_fu_726_p2 = ap_const_lv1_0) and (icmp_ln492_reg_1353 = ap_const_lv1_0))) then 
            ap_phi_mux_HH_V_phi_fu_542_p12 <= select_ln597_fu_819_p3;
        elsif (((icmp_ln591_fu_768_p2 = ap_const_lv1_1) and (icmp_ln580_fu_726_p2 = ap_const_lv1_0) and (icmp_ln492_reg_1353 = ap_const_lv1_0))) then 
            ap_phi_mux_HH_V_phi_fu_542_p12 <= trunc_ln592_fu_847_p1;
        else 
            ap_phi_mux_HH_V_phi_fu_542_p12 <= ap_phi_reg_pp0_iter1_HH_V_reg_539;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_HH_V_reg_539 <= "XXXXXXXXXXXXXXXX";

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, i_fu_166)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_166;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten7_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten7_fu_170)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_indvar_flatten7_load <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_indvar_flatten7_load <= indvar_flatten7_fu_170;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_162, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_162;
        end if; 
    end process;

    ashr_ln595_fu_836_p2 <= std_logic_vector(shift_right(signed(man_V_2_fu_718_p3),to_integer(unsigned('0' & zext_ln595_fu_832_p1(31-1 downto 0)))));
    exp_tmp_fu_682_p4 <= ireg_fu_666_p1(62 downto 52);
    icmp_ln492_fu_576_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten7_load = ap_const_lv6_20) else "0";
    icmp_ln493_fu_600_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv3_4) else "0";
    icmp_ln580_fu_726_p2 <= "1" when (trunc_ln564_fu_670_p1 = ap_const_lv63_0) else "0";
    icmp_ln590_fu_738_p2 <= "1" when (signed(F2_fu_732_p2) > signed(ap_const_lv12_8)) else "0";
    icmp_ln591_fu_768_p2 <= "1" when (F2_fu_732_p2 = ap_const_lv12_8) else "0";
    icmp_ln594_fu_805_p2 <= "1" when (unsigned(sh_amt_fu_756_p3) < unsigned(ap_const_lv12_36)) else "0";
    icmp_ln612_fu_788_p2 <= "1" when (tmp_fu_778_p4 = ap_const_lv8_0) else "0";
    ireg_fu_666_p1 <= H_rvd_q0;
    man_V_1_fu_712_p2 <= std_logic_vector(unsigned(ap_const_lv54_0) - unsigned(zext_ln578_fu_708_p1));
    man_V_2_fu_718_p3 <= 
        man_V_1_fu_712_p2 when (p_Result_s_fu_674_p3(0) = '1') else 
        zext_ln578_fu_708_p1;
    p_Result_1_fu_700_p3 <= (ap_const_lv1_1 & trunc_ln574_fu_696_p1);
    p_Result_s_fu_674_p3 <= ireg_fu_666_p1(63 downto 63);
    select_ln492_1_fu_614_p3 <= 
        add_ln492_fu_594_p2 when (icmp_ln493_fu_600_p2(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln492_fu_606_p3 <= 
        ap_const_lv3_0 when (icmp_ln493_fu_600_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    select_ln597_fu_819_p3 <= 
        ap_const_lv16_FFFF when (tmp_1_fu_811_p3(0) = '1') else 
        ap_const_lv16_0;
        sext_ln590_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sh_amt_fu_756_p3),31));

    sext_ln590cast_fu_794_p1 <= sext_ln590_fu_764_p1(16 - 1 downto 0);
    sh_amt_fu_756_p3 <= 
        add_ln590_fu_744_p2 when (icmp_ln590_fu_738_p2(0) = '1') else 
        sub_ln590_fu_750_p2;
    shl_ln613_fu_798_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln611_fu_774_p1),to_integer(unsigned('0' & sext_ln590cast_fu_794_p1(16-1 downto 0)))));
    sub_ln590_fu_750_p2 <= std_logic_vector(unsigned(ap_const_lv12_8) - unsigned(F2_fu_732_p2));
    tmp_1_fu_811_p3 <= ireg_fu_666_p1(63 downto 63);
    tmp_2_fu_630_p4 <= ((select_ln492_1_fu_614_p3 & trunc_ln494_fu_626_p1) & ap_const_lv1_0);
    tmp_fu_778_p4 <= sh_amt_fu_756_p3(11 downto 4);
    trunc_ln492_fu_622_p1 <= select_ln492_1_fu_614_p3(3 - 1 downto 0);
    trunc_ln494_fu_626_p1 <= select_ln492_fu_606_p3(2 - 1 downto 0);
    trunc_ln564_fu_670_p1 <= ireg_fu_666_p1(63 - 1 downto 0);
    trunc_ln574_fu_696_p1 <= ireg_fu_666_p1(52 - 1 downto 0);
    trunc_ln592_fu_847_p1 <= man_V_2_fu_718_p3(16 - 1 downto 0);
    trunc_ln595_1_fu_842_p1 <= ashr_ln595_fu_836_p2(16 - 1 downto 0);
    trunc_ln595_fu_828_p1 <= sh_amt_fu_756_p3(6 - 1 downto 0);
    trunc_ln611_fu_774_p1 <= man_V_2_fu_718_p3(16 - 1 downto 0);
    zext_ln494_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_630_p4),64));
    zext_ln501_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_tmp_fu_682_p4),12));
    zext_ln578_fu_708_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_1_fu_700_p3),54));
    zext_ln595_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln595_fu_828_p1),54));
end behav;
