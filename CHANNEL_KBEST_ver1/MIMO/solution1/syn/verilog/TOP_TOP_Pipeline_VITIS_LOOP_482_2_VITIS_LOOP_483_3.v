// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module TOP_TOP_Pipeline_VITIS_LOOP_482_2_VITIS_LOOP_483_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Y_0_address0,
        Y_0_ce0,
        Y_0_we0,
        Y_0_d0,
        H_rvd_address0,
        H_rvd_ce0,
        H_rvd_q0,
        Y_1_address0,
        Y_1_ce0,
        Y_1_we0,
        Y_1_d0,
        Y_2_address0,
        Y_2_ce0,
        Y_2_we0,
        Y_2_d0,
        Y_3_address0,
        Y_3_ce0,
        Y_3_we0,
        Y_3_d0,
        Y_4_address0,
        Y_4_ce0,
        Y_4_we0,
        Y_4_d0,
        Y_5_address0,
        Y_5_ce0,
        Y_5_we0,
        Y_5_d0,
        Y_6_address0,
        Y_6_ce0,
        Y_6_we0,
        Y_6_d0,
        Y_7_address0,
        Y_7_ce0,
        Y_7_we0,
        Y_7_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] Y_0_address0;
output   Y_0_ce0;
output   Y_0_we0;
output  [15:0] Y_0_d0;
output  [5:0] H_rvd_address0;
output   H_rvd_ce0;
input  [63:0] H_rvd_q0;
output  [2:0] Y_1_address0;
output   Y_1_ce0;
output   Y_1_we0;
output  [15:0] Y_1_d0;
output  [2:0] Y_2_address0;
output   Y_2_ce0;
output   Y_2_we0;
output  [15:0] Y_2_d0;
output  [2:0] Y_3_address0;
output   Y_3_ce0;
output   Y_3_we0;
output  [15:0] Y_3_d0;
output  [2:0] Y_4_address0;
output   Y_4_ce0;
output   Y_4_we0;
output  [15:0] Y_4_d0;
output  [2:0] Y_5_address0;
output   Y_5_ce0;
output   Y_5_we0;
output  [15:0] Y_5_d0;
output  [2:0] Y_6_address0;
output   Y_6_ce0;
output   Y_6_we0;
output  [15:0] Y_6_d0;
output  [2:0] Y_7_address0;
output   Y_7_ce0;
output   Y_7_we0;
output  [15:0] Y_7_d0;

reg ap_idle;
reg Y_0_ce0;
reg Y_0_we0;
reg H_rvd_ce0;
reg Y_1_ce0;
reg Y_1_we0;
reg Y_2_ce0;
reg Y_2_we0;
reg Y_3_ce0;
reg Y_3_we0;
reg Y_4_ce0;
reg Y_4_we0;
reg Y_5_ce0;
reg Y_5_we0;
reg Y_6_ce0;
reg Y_6_we0;
reg Y_7_ce0;
reg Y_7_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln482_fu_259_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] select_ln482_fu_289_p3;
reg   [3:0] select_ln482_reg_676;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] trunc_ln484_fu_305_p1;
reg   [2:0] trunc_ln484_reg_681;
wire   [63:0] zext_ln484_1_fu_327_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] j_cast_fu_353_p1;
reg   [3:0] j_fu_112;
wire   [3:0] add_ln483_fu_332_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_j_load;
reg   [3:0] i_1_fu_116;
wire   [3:0] select_ln482_1_fu_297_p3;
reg   [3:0] ap_sig_allocacmp_i_1_load;
reg   [6:0] indvar_flatten_fu_120;
wire   [6:0] add_ln482_1_fu_265_p2;
reg   [6:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [15:0] select_ln580_fu_636_p3;
wire   [0:0] icmp_ln483_fu_283_p2;
wire   [3:0] add_ln482_fu_277_p2;
wire   [5:0] tmp_cast_fu_309_p3;
wire   [5:0] zext_ln484_fu_317_p1;
wire   [5:0] add_ln484_fu_321_p2;
wire   [63:0] ireg_fu_364_p1;
wire   [10:0] exp_tmp_fu_380_p4;
wire   [51:0] trunc_ln574_fu_394_p1;
wire   [52:0] p_Result_3_fu_398_p3;
wire   [53:0] zext_ln578_fu_406_p1;
wire   [0:0] p_Result_s_fu_372_p3;
wire   [53:0] man_V_5_fu_410_p2;
wire   [62:0] trunc_ln564_fu_368_p1;
wire   [11:0] zext_ln501_fu_390_p1;
wire   [11:0] F2_fu_430_p2;
wire   [0:0] icmp_ln590_fu_436_p2;
wire   [11:0] add_ln590_fu_442_p2;
wire   [11:0] sub_ln590_fu_448_p2;
wire  signed [11:0] sh_amt_fu_454_p3;
wire   [53:0] man_V_6_fu_416_p3;
wire   [7:0] tmp_fu_482_p4;
wire  signed [31:0] sext_ln590_fu_462_p1;
wire   [53:0] zext_ln595_fu_498_p1;
wire   [53:0] ashr_ln595_fu_502_p2;
wire   [0:0] tmp_3_fu_512_p3;
wire   [15:0] trunc_ln592_fu_472_p1;
wire   [15:0] sext_ln590cast_fu_528_p1;
wire   [0:0] icmp_ln580_fu_424_p2;
wire   [0:0] icmp_ln591_fu_466_p2;
wire   [0:0] xor_ln580_fu_538_p2;
wire   [0:0] and_ln591_fu_544_p2;
wire   [0:0] or_ln591_fu_558_p2;
wire   [0:0] xor_ln591_fu_564_p2;
wire   [0:0] icmp_ln594_fu_476_p2;
wire   [0:0] and_ln590_fu_570_p2;
wire   [0:0] xor_ln594_fu_576_p2;
wire   [0:0] and_ln594_fu_582_p2;
wire   [15:0] select_ln597_fu_520_p3;
wire   [15:0] select_ln591_fu_550_p3;
wire   [0:0] and_ln594_1_fu_596_p2;
wire   [15:0] trunc_ln595_fu_508_p1;
wire   [15:0] select_ln594_fu_588_p3;
wire   [0:0] or_ln590_fu_610_p2;
wire   [0:0] icmp_ln612_fu_492_p2;
wire   [0:0] xor_ln590_fu_616_p2;
wire   [0:0] and_ln612_fu_622_p2;
wire   [15:0] shl_ln613_fu_532_p2;
wire   [15:0] select_ln594_1_fu_602_p3;
wire   [15:0] select_ln612_fu_628_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

TOP_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln482_fu_259_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_1_fu_116 <= select_ln482_1_fu_297_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_1_fu_116 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln482_fu_259_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_120 <= add_ln482_1_fu_265_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_120 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln482_fu_259_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_112 <= add_ln483_fu_332_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_112 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln482_fu_259_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln482_reg_676 <= select_ln482_fu_289_p3;
        trunc_ln484_reg_681 <= trunc_ln484_fu_305_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        H_rvd_ce0 = 1'b1;
    end else begin
        H_rvd_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_0_ce0 = 1'b1;
    end else begin
        Y_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln484_reg_681 == 3'd0))) begin
        Y_0_we0 = 1'b1;
    end else begin
        Y_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_1_ce0 = 1'b1;
    end else begin
        Y_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln484_reg_681 == 3'd1))) begin
        Y_1_we0 = 1'b1;
    end else begin
        Y_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_2_ce0 = 1'b1;
    end else begin
        Y_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln484_reg_681 == 3'd2))) begin
        Y_2_we0 = 1'b1;
    end else begin
        Y_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_3_ce0 = 1'b1;
    end else begin
        Y_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln484_reg_681 == 3'd3))) begin
        Y_3_we0 = 1'b1;
    end else begin
        Y_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_4_ce0 = 1'b1;
    end else begin
        Y_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln484_reg_681 == 3'd4))) begin
        Y_4_we0 = 1'b1;
    end else begin
        Y_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_5_ce0 = 1'b1;
    end else begin
        Y_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln484_reg_681 == 3'd5))) begin
        Y_5_we0 = 1'b1;
    end else begin
        Y_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_6_ce0 = 1'b1;
    end else begin
        Y_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln484_reg_681 == 3'd6))) begin
        Y_6_we0 = 1'b1;
    end else begin
        Y_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Y_7_ce0 = 1'b1;
    end else begin
        Y_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln484_reg_681 == 3'd7))) begin
        Y_7_we0 = 1'b1;
    end else begin
        Y_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln482_fu_259_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_1_load = 4'd0;
    end else begin
        ap_sig_allocacmp_i_1_load = i_1_fu_116;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 7'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_120;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_load = 4'd0;
    end else begin
        ap_sig_allocacmp_j_load = j_fu_112;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_430_p2 = (12'd1075 - zext_ln501_fu_390_p1);

assign H_rvd_address0 = zext_ln484_1_fu_327_p1;

assign Y_0_address0 = j_cast_fu_353_p1;

assign Y_0_d0 = select_ln580_fu_636_p3;

assign Y_1_address0 = j_cast_fu_353_p1;

assign Y_1_d0 = select_ln580_fu_636_p3;

assign Y_2_address0 = j_cast_fu_353_p1;

assign Y_2_d0 = select_ln580_fu_636_p3;

assign Y_3_address0 = j_cast_fu_353_p1;

assign Y_3_d0 = select_ln580_fu_636_p3;

assign Y_4_address0 = j_cast_fu_353_p1;

assign Y_4_d0 = select_ln580_fu_636_p3;

assign Y_5_address0 = j_cast_fu_353_p1;

assign Y_5_d0 = select_ln580_fu_636_p3;

assign Y_6_address0 = j_cast_fu_353_p1;

assign Y_6_d0 = select_ln580_fu_636_p3;

assign Y_7_address0 = j_cast_fu_353_p1;

assign Y_7_d0 = select_ln580_fu_636_p3;

assign add_ln482_1_fu_265_p2 = (ap_sig_allocacmp_indvar_flatten_load + 7'd1);

assign add_ln482_fu_277_p2 = (ap_sig_allocacmp_i_1_load + 4'd1);

assign add_ln483_fu_332_p2 = (select_ln482_fu_289_p3 + 4'd1);

assign add_ln484_fu_321_p2 = (tmp_cast_fu_309_p3 + zext_ln484_fu_317_p1);

assign add_ln590_fu_442_p2 = ($signed(F2_fu_430_p2) + $signed(12'd4088));

assign and_ln590_fu_570_p2 = (xor_ln591_fu_564_p2 & icmp_ln590_fu_436_p2);

assign and_ln591_fu_544_p2 = (xor_ln580_fu_538_p2 & icmp_ln591_fu_466_p2);

assign and_ln594_1_fu_596_p2 = (icmp_ln594_fu_476_p2 & and_ln590_fu_570_p2);

assign and_ln594_fu_582_p2 = (xor_ln594_fu_576_p2 & and_ln590_fu_570_p2);

assign and_ln612_fu_622_p2 = (xor_ln590_fu_616_p2 & icmp_ln612_fu_492_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln595_fu_502_p2 = $signed(man_V_6_fu_416_p3) >>> zext_ln595_fu_498_p1;

assign exp_tmp_fu_380_p4 = {{ireg_fu_364_p1[62:52]}};

assign icmp_ln482_fu_259_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln483_fu_283_p2 = ((ap_sig_allocacmp_j_load == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln580_fu_424_p2 = ((trunc_ln564_fu_368_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln590_fu_436_p2 = (($signed(F2_fu_430_p2) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_466_p2 = ((F2_fu_430_p2 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln594_fu_476_p2 = ((sh_amt_fu_454_p3 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln612_fu_492_p2 = ((tmp_fu_482_p4 == 8'd0) ? 1'b1 : 1'b0);

assign ireg_fu_364_p1 = H_rvd_q0;

assign j_cast_fu_353_p1 = select_ln482_reg_676;

assign man_V_5_fu_410_p2 = (54'd0 - zext_ln578_fu_406_p1);

assign man_V_6_fu_416_p3 = ((p_Result_s_fu_372_p3[0:0] == 1'b1) ? man_V_5_fu_410_p2 : zext_ln578_fu_406_p1);

assign or_ln590_fu_610_p2 = (or_ln591_fu_558_p2 | icmp_ln590_fu_436_p2);

assign or_ln591_fu_558_p2 = (icmp_ln591_fu_466_p2 | icmp_ln580_fu_424_p2);

assign p_Result_3_fu_398_p3 = {{1'd1}, {trunc_ln574_fu_394_p1}};

assign p_Result_s_fu_372_p3 = ireg_fu_364_p1[32'd63];

assign select_ln482_1_fu_297_p3 = ((icmp_ln483_fu_283_p2[0:0] == 1'b1) ? add_ln482_fu_277_p2 : ap_sig_allocacmp_i_1_load);

assign select_ln482_fu_289_p3 = ((icmp_ln483_fu_283_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_j_load);

assign select_ln580_fu_636_p3 = ((icmp_ln580_fu_424_p2[0:0] == 1'b1) ? 16'd0 : select_ln612_fu_628_p3);

assign select_ln591_fu_550_p3 = ((and_ln591_fu_544_p2[0:0] == 1'b1) ? trunc_ln592_fu_472_p1 : 16'd0);

assign select_ln594_1_fu_602_p3 = ((and_ln594_1_fu_596_p2[0:0] == 1'b1) ? trunc_ln595_fu_508_p1 : select_ln594_fu_588_p3);

assign select_ln594_fu_588_p3 = ((and_ln594_fu_582_p2[0:0] == 1'b1) ? select_ln597_fu_520_p3 : select_ln591_fu_550_p3);

assign select_ln597_fu_520_p3 = ((tmp_3_fu_512_p3[0:0] == 1'b1) ? 16'd65535 : 16'd0);

assign select_ln612_fu_628_p3 = ((and_ln612_fu_622_p2[0:0] == 1'b1) ? shl_ln613_fu_532_p2 : select_ln594_1_fu_602_p3);

assign sext_ln590_fu_462_p1 = sh_amt_fu_454_p3;

assign sext_ln590cast_fu_528_p1 = sext_ln590_fu_462_p1[15:0];

assign sh_amt_fu_454_p3 = ((icmp_ln590_fu_436_p2[0:0] == 1'b1) ? add_ln590_fu_442_p2 : sub_ln590_fu_448_p2);

assign shl_ln613_fu_532_p2 = trunc_ln592_fu_472_p1 << sext_ln590cast_fu_528_p1;

assign sub_ln590_fu_448_p2 = (12'd8 - F2_fu_430_p2);

assign tmp_3_fu_512_p3 = ireg_fu_364_p1[32'd63];

assign tmp_cast_fu_309_p3 = {{trunc_ln484_fu_305_p1}, {3'd0}};

assign tmp_fu_482_p4 = {{sh_amt_fu_454_p3[11:4]}};

assign trunc_ln484_fu_305_p1 = select_ln482_1_fu_297_p3[2:0];

assign trunc_ln564_fu_368_p1 = ireg_fu_364_p1[62:0];

assign trunc_ln574_fu_394_p1 = ireg_fu_364_p1[51:0];

assign trunc_ln592_fu_472_p1 = man_V_6_fu_416_p3[15:0];

assign trunc_ln595_fu_508_p1 = ashr_ln595_fu_502_p2[15:0];

assign xor_ln580_fu_538_p2 = (icmp_ln580_fu_424_p2 ^ 1'd1);

assign xor_ln590_fu_616_p2 = (or_ln590_fu_610_p2 ^ 1'd1);

assign xor_ln591_fu_564_p2 = (or_ln591_fu_558_p2 ^ 1'd1);

assign xor_ln594_fu_576_p2 = (icmp_ln594_fu_476_p2 ^ 1'd1);

assign zext_ln484_1_fu_327_p1 = add_ln484_fu_321_p2;

assign zext_ln484_fu_317_p1 = select_ln482_fu_289_p3;

assign zext_ln501_fu_390_p1 = exp_tmp_fu_380_p4;

assign zext_ln578_fu_406_p1 = p_Result_3_fu_398_p3;

assign zext_ln595_fu_498_p1 = $unsigned(sext_ln590_fu_462_p1);

endmodule //TOP_TOP_Pipeline_VITIS_LOOP_482_2_VITIS_LOOP_483_3
